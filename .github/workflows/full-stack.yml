name: Full Stack CI/CD

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '*.md'

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          backend:
            - 'backend/**'
            - 'datacontract/**'
          frontend:
            - 'frontend/**'
            - 'datacontract/**'

  backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal

  frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json
    - name: Install dependencies
      run: npm ci
    - name: Lint
      run: npm run lint
    - name: Type check
      run: npm run type-check
    - name: Run unit tests
      run: npm run test:unit
    - name: Build
      run: npm run build

  integration-test:
    needs: [backend, frontend]
    if: always() && (needs.backend.result == 'success' || needs.backend.result == 'skipped') && (needs.frontend.result == 'success' || needs.frontend.result == 'skipped')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create docker-compose for testing
      run: |
        cat > docker-compose.test.yml << EOF
        version: '3.8'
        services:
          backend:
            build: ./backend
            ports:
              - "7071:80"
            environment:
              - AzureWebJobsStorage=UseDevelopmentStorage=true
              - FUNCTIONS_WORKER_RUNTIME=dotnet-isolated
          
          frontend:
            build: ./frontend
            ports:
              - "3000:80"
            depends_on:
              - backend
            environment:
              - VITE_API_BASE_URL=http://backend:80/api
        EOF

    - name: Run integration tests
      run: |
        docker compose -f docker-compose.test.yml up --build -d
        
        # Wait for services to be ready
        sleep 30
        
        # Test backend health
        curl -f http://localhost:7071/api/events || exit 1
        
        # Test frontend accessibility
        curl -f http://localhost:3000 || exit 1
        
        # Cleanup
        docker compose -f docker-compose.test.yml down